function [n_processors,n_blocks,eqs_per_block,m_local,n_local,m_global,n_global] = loadinfo(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [N_PROCESSORS,N_BLOCKS,EQS_PER_BLOCK,M_LOCAL,N_LOCAL,M_GLOBAL,N_GLOBAL]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [N_PROCESSORS,N_BLOCKS,EQS_PER_BLOCK,M_LOCAL,N_LOCAL,M_GLOBAL,N_GLOBAL]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [n_processors,n_blocks,eqs_per_block,m_local,n_local,m_global,n_global]
%   = importfile('info.dat',2, 2);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2013/07/24 10:42:57

%% Initialize variables.
delimiter = ' ';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
n_processors = dataArray{:, 1};
n_blocks = dataArray{:, 2};
eqs_per_block = dataArray{:, 3};
m_local = dataArray{:, 4};
n_local = dataArray{:, 5};
m_global = dataArray{:, 6};
n_global = dataArray{:, 7};

